module House_heating__heatingstatus
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type heatingstatus
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = heatingstatus,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type heatingstatus__ref = {
                           mutable heatingstatus__content : heatingstatus
                           }
  
  function heatingstatus__ref_heatingstatus__content__projection (a: heatingstatus__ref) : heatingstatus =
    a.heatingstatus__content
  
  meta "model_projection" function heatingstatus__ref_heatingstatus__content__projection
  
  meta "inline:no" function heatingstatus__ref_heatingstatus__content__projection
  
  val heatingstatus__havoc (x: heatingstatus__ref) : unit
    writes { x }
end

module House_heating__heatingstatus__rep
  use House_heating__heatingstatus as House_heating__heatingstatus
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = House_heating__heatingstatus.heatingstatus,
    predicate in_range = House_heating__heatingstatus.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module House_heating__temperature
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type temperature = <range 17 19>
  
  val function first : int
    ensures { result = (17 : int) }
  
  val function last : int
    ensures { result = (19 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = temperature,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type temperature__ref = { mutable temperature__content : temperature }
  
  function temperature__ref_temperature__content__projection (a: temperature__ref) : temperature =
    a.temperature__content
  
  meta "model_projection" function temperature__ref_temperature__content__projection
  
  meta "inline:no" function temperature__ref_temperature__content__projection
  
  val temperature__havoc (x: temperature__ref) : unit
    writes { x }
end

module House_heating__temperature__rep
  use House_heating__temperature as House_heating__temperature
  use _gnatprove_standard.Main
  use int.Int
  
  function to_rep (x: House_heating__temperature.temperature) : int =
    House_heating__temperature.temperature'int x
  
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = House_heating__temperature.temperature,
    predicate in_range = House_heating__temperature.in_range,
    function to_rep = to_rep
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module House_heating__househeating__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use House_heating__heatingstatus as House_heating__heatingstatus
  use House_heating__heatingstatus__rep as House_heating__heatingstatus__rep
  use House_heating__temperature as House_heating__temperature
  use House_heating__temperature__rep as House_heating__temperature__rep
  
  type __split_fields = {
                       rec__house_heating__househeating__temp :
                         House_heating__temperature.temperature;
                       rec__house_heating__househeating__status :
                         House_heating__heatingstatus.heatingstatus;
                       rec__ext__ : Main.__private
                       }
  
  function __split_fields_rec__house_heating__househeating__temp__projection (a: __split_fields) : 
    House_heating__temperature.temperature =
    a.rec__house_heating__househeating__temp
  
  meta "model_projection" function __split_fields_rec__house_heating__househeating__temp__projection
  
  meta "inline:no" function __split_fields_rec__house_heating__househeating__temp__projection
  
  function __split_fields_rec__house_heating__househeating__status__projection (a: __split_fields) : 
    House_heating__heatingstatus.heatingstatus =
    a.rec__house_heating__househeating__status
  
  meta "model_projection" function __split_fields_rec__house_heating__househeating__status__projection
  
  meta "inline:no" function __split_fields_rec__house_heating__househeating__status__projection
  
  function __split_fields_rec__ext____projection (a: __split_fields) : 
    Main.__private =
    a.rec__ext__
  
  meta "model_projection" function __split_fields_rec__ext____projection
  
  meta "inline:no" function __split_fields_rec__ext____projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields; attr__tag : int }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function __rep_attr__tag__projection (a: __rep) : int = a.attr__tag
  
  meta "model_projection" function __rep_attr__tag__projection
  
  meta "inline:no" function __rep_attr__tag__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate house_heating__househeating__temp__pred (a: __rep) = true
  
  val house_heating__househeating__temp__pred (a: __rep) : bool
    ensures { result
                <->
                (house_heating__househeating__temp__pred (a : __rep)) }
  
  val rec__house_heating__househeating__temp_ (a: __rep) : House_heating__temperature.temperature
    requires { house_heating__househeating__temp__pred a }
    ensures { (result
                 = ((__split_fields a).rec__house_heating__househeating__temp)) }
  
  predicate house_heating__househeating__status__pred (a: __rep) = true
  
  val house_heating__househeating__status__pred (a: __rep) : bool
    ensures { result
                <->
                (house_heating__househeating__status__pred (a : __rep)) }
  
  val rec__house_heating__househeating__status_ (a: __rep) : House_heating__heatingstatus.heatingstatus
    requires { house_heating__househeating__status__pred a }
    ensures { (result
                 = ((__split_fields a).rec__house_heating__househeating__status)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((House_heating__temperature__rep.to_rep
            ((__split_fields a).rec__house_heating__househeating__temp))
           = (House_heating__temperature__rep.to_rep
                ((__split_fields b).rec__house_heating__househeating__temp))) /\
          ((House_heating__heatingstatus__rep.to_rep
              ((__split_fields a).rec__house_heating__househeating__status))
             = (House_heating__heatingstatus__rep.to_rep
                  ((__split_fields b).rec__house_heating__househeating__status)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
  
  val function __dispatch_eq (a: __rep) (b: __rep) : bool
end

module House_heating__househeating
  use export House_heating__househeating__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type househeating = __rep
  
  val function __tag : int
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function house_heating__househeating__temp__first__bit : int
  
  val function house_heating__househeating__temp__last__bit : int
  
  val function house_heating__househeating__temp__position : int
  
  axiom house_heating__househeating__temp__first__bit_axiom:
    (house_heating__househeating__temp__first__bit >= (0 : int))
  
  axiom house_heating__househeating__temp__last__bit_axiom:
    (house_heating__househeating__temp__last__bit
       > house_heating__househeating__temp__first__bit)
  
  axiom house_heating__househeating__temp__position_axiom:
    (house_heating__househeating__temp__position >= (0 : int))
  
  val function house_heating__househeating__status__first__bit : int
  
  val function house_heating__househeating__status__last__bit : int
  
  val function house_heating__househeating__status__position : int
  
  axiom house_heating__househeating__status__first__bit_axiom:
    (house_heating__househeating__status__first__bit >= (0 : int))
  
  axiom house_heating__househeating__status__last__bit_axiom:
    (house_heating__househeating__status__last__bit
       > house_heating__househeating__status__first__bit)
  
  axiom house_heating__househeating__status__position_axiom:
    (house_heating__househeating__status__position >= (0 : int))
  
  val function user_eq (a: househeating) (b: househeating) : bool
  
  val function dummy : househeating
  
  type househeating__ref = { mutable househeating__content : househeating }
  
  function househeating__ref_househeating__content__projection (a: househeating__ref) : househeating =
    a.househeating__content
  
  meta "model_projection" function househeating__ref_househeating__content__projection
  
  meta "inline:no" function househeating__ref_househeating__content__projection
  
  val househeating__havoc (x: househeating__ref) : unit
    writes { x }
end

module House_heating__update__this
  use _gnatprove_standard.Main
  use int.Int
  use House_heating__househeating as House_heating__househeating
  
  val this__split_fields : House_heating__househeating.__split_fields__ref
  
  val function this__attr__tag : int
end

module House_heating__househeating___axiom
  use _gnatprove_standard.Main
  use int.Int
  use House_heating__househeating as House_heating__househeating
  
  predicate dynamic_invariant (temp___expr_180: House_heating__househeating.househeating) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) =
    true
  
  val dynamic_invariant (temp___expr_180: House_heating__househeating.househeating) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_180 :
                          House_heating__househeating.househeating))
                      (temp___is_init_176 : bool))
                     (temp___skip_constant_177 : bool))
                    (temp___do_toplevel_178 : bool))
                   (temp___do_typ_inv_179 : bool)) }
  
  predicate default_initial_assumption (temp___expr_181: House_heating__househeating.househeating) (temp___skip_top_level_182: bool) =
    ((House_heating__househeating.attr__tag temp___expr_181)
       = House_heating__househeating.__tag)
  
  val default_initial_assumption (temp___expr_181: House_heating__househeating.househeating) (temp___skip_top_level_182: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_181 :
                       House_heating__househeating.househeating))
                   (temp___skip_top_level_182 : bool)) }
end

module House_heating__heatingstatus___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use House_heating__heatingstatus as House_heating__heatingstatus
  
  predicate dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) =
    if ((temp___is_init_162 = True) \/
          (House_heating__heatingstatus.first
             <= House_heating__heatingstatus.last)) then
      (((House_heating__heatingstatus.dynamic_property
           House_heating__heatingstatus.first)
          House_heating__heatingstatus.last)
         temp___expr_166)
    else true
  
  val dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_166 : int))
                      (temp___is_init_162 : bool))
                     (temp___skip_constant_163 : bool))
                    (temp___do_toplevel_164 : bool))
                   (temp___do_typ_inv_165 : bool)) }
  
  predicate default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) =
    true
  
  val default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_167 : int))
                   (temp___skip_top_level_168 : bool)) }
end

module House_heating__temperature___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use House_heating__temperature as House_heating__temperature
  
  predicate dynamic_invariant (temp___expr_173: int) (temp___is_init_169: bool) (temp___skip_constant_170: bool) (temp___do_toplevel_171: bool) (temp___do_typ_inv_172: bool) =
    if ((temp___is_init_169 = True) \/
          (House_heating__temperature.first
             <= House_heating__temperature.last)) then
      (((House_heating__temperature.dynamic_property
           House_heating__temperature.first)
          House_heating__temperature.last)
         temp___expr_173)
    else true
  
  val dynamic_invariant (temp___expr_173: int) (temp___is_init_169: bool) (temp___skip_constant_170: bool) (temp___do_toplevel_171: bool) (temp___do_typ_inv_172: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_173 : int))
                      (temp___is_init_169 : bool))
                     (temp___skip_constant_170 : bool))
                    (temp___do_toplevel_171 : bool))
                   (temp___do_typ_inv_172 : bool)) }
  
  predicate default_initial_assumption (temp___expr_174: int) (temp___skip_top_level_175: bool) =
    true
  
  val default_initial_assumption (temp___expr_174: int) (temp___skip_top_level_175: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_174 : int))
                   (temp___skip_top_level_175 : bool)) }
end

module House_heating__update__this___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module House_heating__update__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Boolean as Boolean
  use House_heating__update__this as House_heating__update__this
  use House_heating__househeating as House_heating__househeating
  use House_heating__househeating___axiom as House_heating__househeating___axiom
  use House_heating__heatingstatus as House_heating__heatingstatus
  use House_heating__heatingstatus__rep as House_heating__heatingstatus__rep
  use House_heating__temperature as House_heating__temperature
  use House_heating__temperature__rep as House_heating__temperature__rep
  use House_heating__heatingstatus___axiom as House_heating__heatingstatus___axiom
  use House_heating__temperature___axiom as House_heating__temperature___axiom
  use House_heating__househeating___axiom as House_heating__househeating___axiom
  use House_heating__update__this___axiom as House_heating__update__this___axiom
  
  let def (__void_param : unit)
    requires { [#"house_heating.ads" 18 0 0] true }
    ensures { [#"house_heating.ads" 18 0 0]
              [#"house_heating.ads" 20 0 0]
              [@GP_Reason:VC_POSTCONDITION]
              [@GP_Shape:pragargs__or]
              [@comment:   Post => (            ^ house_heating.ads:20:12:VC_POSTCONDITION]
              [@model_vc_post]
              [@GP_Sloc:house_heating.ads:20:12]
              [@GP_Id:2]
              [@GP_Pretty_Ada:3335]
              [@GP_Sloc:house_heating.ads:20:12]
              (((((((House_heating__heatingstatus__rep.to_rep
                       ((House_heating__househeating.__split_fields
                            { House_heating__househeating.__split_fields =
                                (House_heating__househeating.__split_fields__content
                                    House_heating__update__this.this__split_fields) ;
                              House_heating__househeating.attr__tag =
                                House_heating__update__this.this__attr__tag }).
                          House_heating__househeating.rec__house_heating__househeating__status))
                      = (0 : int)) /\
                     ((House_heating__temperature__rep.to_rep
                         (old ((House_heating__househeating.__split_fields
                                   { House_heating__househeating.__split_fields =
                                       (House_heating__househeating.__split_fields__content
                                           House_heating__update__this.this__split_fields) ;
                                     House_heating__househeating.attr__tag =
                                       House_heating__update__this.this__attr__tag }).
                                 House_heating__househeating.rec__house_heating__househeating__temp)))
                        < (17 : int))) /\
                    ((House_heating__temperature__rep.to_rep
                        ((House_heating__househeating.__split_fields
                             { House_heating__househeating.__split_fields =
                                 (House_heating__househeating.__split_fields__content
                                     House_heating__update__this.this__split_fields) ;
                               House_heating__househeating.attr__tag =
                                 House_heating__update__this.this__attr__tag }).
                           House_heating__househeating.rec__house_heating__househeating__temp))
                       = ((House_heating__temperature__rep.to_rep
                             (old ((House_heating__househeating.__split_fields
                                       { House_heating__househeating.__split_fields =
                                           (House_heating__househeating.__split_fields__content
                                               House_heating__update__this.this__split_fields) ;
                                         House_heating__househeating.attr__tag =
                                           House_heating__update__this.this__attr__tag }).
                                     House_heating__househeating.rec__house_heating__househeating__temp)))
                            + (1 : int)))) \/
                   ((((House_heating__heatingstatus__rep.to_rep
                         ((House_heating__househeating.__split_fields
                              { House_heating__househeating.__split_fields =
                                  (House_heating__househeating.__split_fields__content
                                      House_heating__update__this.this__split_fields) ;
                                House_heating__househeating.attr__tag =
                                  House_heating__update__this.this__attr__tag }).
                            House_heating__househeating.rec__house_heating__househeating__status))
                        = (1 : int)) /\
                       ((House_heating__temperature__rep.to_rep
                           (old ((House_heating__househeating.__split_fields
                                     { House_heating__househeating.__split_fields =
                                         (House_heating__househeating.__split_fields__content
                                             House_heating__update__this.this__split_fields) ;
                                       House_heating__househeating.attr__tag =
                                         House_heating__update__this.this__attr__tag }).
                                   House_heating__househeating.rec__house_heating__househeating__temp)))
                          > (19 : int))) /\
                      ((House_heating__temperature__rep.to_rep
                          ((House_heating__househeating.__split_fields
                               { House_heating__househeating.__split_fields =
                                   (House_heating__househeating.__split_fields__content
                                       House_heating__update__this.this__split_fields) ;
                                 House_heating__househeating.attr__tag =
                                   House_heating__update__this.this__attr__tag }).
                             House_heating__househeating.rec__house_heating__househeating__temp))
                         = ((House_heating__temperature__rep.to_rep
                               (old ((House_heating__househeating.__split_fields
                                         { House_heating__househeating.__split_fields =
                                             (House_heating__househeating.__split_fields__content
                                                 House_heating__update__this.this__split_fields) ;
                                           House_heating__househeating.attr__tag =
                                             House_heating__update__this.this__attr__tag }).
                                       House_heating__househeating.rec__house_heating__househeating__temp)))
                              - (1 : int))))) \/
                  (((House_heating__heatingstatus__rep.to_rep
                       ((House_heating__househeating.__split_fields
                            { House_heating__househeating.__split_fields =
                                (House_heating__househeating.__split_fields__content
                                    House_heating__update__this.this__split_fields) ;
                              House_heating__househeating.attr__tag =
                                House_heating__update__this.this__attr__tag }).
                          House_heating__househeating.rec__house_heating__househeating__status))
                      = (1 : int)) /\
                     ((House_heating__temperature__rep.to_rep
                         (old ((House_heating__househeating.__split_fields
                                   { House_heating__househeating.__split_fields =
                                       (House_heating__househeating.__split_fields__content
                                           House_heating__update__this.this__split_fields) ;
                                     House_heating__househeating.attr__tag =
                                       House_heating__update__this.this__attr__tag }).
                                 House_heating__househeating.rec__house_heating__househeating__temp)))
                        <= (19 : int)))) \/
                 (((House_heating__heatingstatus__rep.to_rep
                      ((House_heating__househeating.__split_fields
                           { House_heating__househeating.__split_fields =
                               (House_heating__househeating.__split_fields__content
                                   House_heating__update__this.this__split_fields) ;
                             House_heating__househeating.attr__tag =
                               House_heating__update__this.this__attr__tag }).
                         House_heating__househeating.rec__house_heating__househeating__status))
                     = (0 : int)) /\
                    ((House_heating__temperature__rep.to_rep
                        (old ((House_heating__househeating.__split_fields
                                  { House_heating__househeating.__split_fields =
                                      (House_heating__househeating.__split_fields__content
                                          House_heating__update__this.this__split_fields) ;
                                    House_heating__househeating.attr__tag =
                                      House_heating__update__this.this__attr__tag }).
                                House_heating__househeating.rec__house_heating__househeating__temp)))
                       >= (17 : int)))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram house_heating.ads:18]
      ());
     assume {
       ((((House_heating__househeating___axiom.dynamic_invariant
             { House_heating__househeating.__split_fields =
                 (House_heating__househeating.__split_fields__content
                     House_heating__update__this.this__split_fields) ;
               House_heating__househeating.attr__tag =
                 House_heating__update__this.this__attr__tag })
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram house_heating.ads:18]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram house_heating.ads:18]
      ());
     ([@GNAT-comment:Assume Pre of the subprogram house_heating.ads:18] ());
     assume {
       [@GP_Pretty_Ada:3255]
       (let temp___213 =
          House_heating__temperature__rep.to_rep
            ((House_heating__househeating.__split_fields
                 { House_heating__househeating.__split_fields =
                     (House_heating__househeating.__split_fields__content
                         House_heating__update__this.this__split_fields) ;
                   House_heating__househeating.attr__tag =
                     House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
        (((17 : int) <= temp___213) /\ (temp___213 <= (19 : int)))) };
     (let temp___old_198 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      let temp___old_197 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      let temp___old_196 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      let temp___old_195 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      let temp___old_194 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      let temp___old_193 =
        House_heating__temperature__rep.to_rep
          ((House_heating__househeating.__split_fields
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag }).House_heating__househeating.rec__house_heating__househeating__temp) in
      (try
         ([@GP_Sloc:house_heating.adb:7:7]
          [#"house_heating.adb" 7 0 0]
          (if (([#"house_heating.adb" 7 0 0]
                [#"house_heating.adb" 7 0 0]
                (([@branch_id=829] Main.spark__branch).bool__content <-
                   ((Boolean.andb
                       ((House_heating__heatingstatus__rep.to_rep
                           ((House_heating__househeating.__split_fields
                                { House_heating__househeating.__split_fields =
                                    (House_heating__househeating.__split_fields__content
                                        House_heating__update__this.this__split_fields) ;
                                  House_heating__househeating.attr__tag =
                                    House_heating__update__this.this__attr__tag }).
                              House_heating__househeating.rec__house_heating__househeating__status))
                          = (1 : int)))
                      ((House_heating__temperature__rep.to_rep
                          ((House_heating__househeating.__split_fields
                               { House_heating__househeating.__split_fields =
                                   (House_heating__househeating.__split_fields__content
                                       House_heating__update__this.this__split_fields) ;
                                 House_heating__househeating.attr__tag =
                                   House_heating__update__this.this__attr__tag }).
                             House_heating__househeating.rec__house_heating__househeating__temp))
                         <= (17 : int)))));
               (([@branch_id=829] Main.spark__branch).bool__content)) then
             ([@GP_Sloc:house_heating.adb:8:22]
              [#"house_heating.adb" 8 0 0]
              (let temp___203 =
                 let temp___202 =
                   { House_heating__househeating.__split_fields =
                       (House_heating__househeating.__split_fields__content
                           House_heating__update__this.this__split_fields) ;
                     House_heating__househeating.attr__tag =
                       House_heating__update__this.this__attr__tag } in
                 ([#"house_heating.adb" 8 0 0]
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         (House_heating__househeating.__split_fields
                             temp___202).House_heating__househeating.rec__house_heating__househeating__status in
                       () in
                     ()
                   end));
                 ({ temp___202 with
                    House_heating__househeating.__split_fields =
                      ({ (House_heating__househeating.__split_fields
                             temp___202) with
                         House_heating__househeating.rec__house_heating__househeating__status =
                           (House_heating__heatingstatus__rep.of_rep
                              (0 : int)) }) }) in
               [#"house_heating.adb" 8 0 0]
               (House_heating__update__this.this__split_fields.House_heating__househeating.__split_fields__content <-
                  (House_heating__househeating.__split_fields temp___203))))
           else
             ([@GP_Sloc:house_heating.adb:9:7]
              (if (([#"house_heating.adb" 9 0 0]
                    [#"house_heating.adb" 9 0 0]
                    (([@branch_id=848] Main.spark__branch).bool__content <-
                       ((Boolean.andb
                           ((House_heating__heatingstatus__rep.to_rep
                               ((House_heating__househeating.__split_fields
                                    { House_heating__househeating.__split_fields =
                                        (House_heating__househeating.__split_fields__content
                                            House_heating__update__this.this__split_fields) ;
                                      House_heating__househeating.attr__tag =
                                        House_heating__update__this.this__attr__tag }).
                                  House_heating__househeating.rec__house_heating__househeating__status))
                              = (0 : int)))
                          ((House_heating__temperature__rep.to_rep
                              ((House_heating__househeating.__split_fields
                                   { House_heating__househeating.__split_fields =
                                       (House_heating__househeating.__split_fields__content
                                           House_heating__update__this.this__split_fields) ;
                                     House_heating__househeating.attr__tag =
                                       House_heating__update__this.this__attr__tag }).
                                 House_heating__househeating.rec__house_heating__househeating__temp))
                             >= (19 : int)))));
                   (([@branch_id=848] Main.spark__branch).bool__content)) then
                 ([@GP_Sloc:house_heating.adb:10:22]
                  [#"house_heating.adb" 10 0 0]
                  (let temp___206 =
                     let temp___205 =
                       { House_heating__househeating.__split_fields =
                           (House_heating__househeating.__split_fields__content
                               House_heating__update__this.this__split_fields) ;
                         House_heating__househeating.attr__tag =
                           House_heating__update__this.this__attr__tag } in
                     ([#"house_heating.adb" 10 0 0]
                      (begin
                         ensures { true }
                         let _ =
                           let _ =
                             (House_heating__househeating.__split_fields
                                 temp___205).House_heating__househeating.rec__house_heating__househeating__status in
                           () in
                         ()
                       end));
                     ({ temp___205 with
                        House_heating__househeating.__split_fields =
                          ({ (House_heating__househeating.__split_fields
                                 temp___205) with
                             House_heating__househeating.rec__house_heating__househeating__status =
                               (House_heating__heatingstatus__rep.of_rep
                                  (1 : int)) }) }) in
                   [#"house_heating.adb" 10 0 0]
                   (House_heating__update__this.this__split_fields.House_heating__househeating.__split_fields__content <-
                      (House_heating__househeating.__split_fields temp___206))))
               else ()))));
         ([@GP_Sloc:house_heating.adb:14:7]
          [#"house_heating.adb" 14 0 0]
          (if (([#"house_heating.adb" 14 0 0]
                [#"house_heating.adb" 14 0 0]
                (([@branch_id=865] Main.spark__branch).bool__content <-
                   ((House_heating__heatingstatus__rep.to_rep
                       ((House_heating__househeating.__split_fields
                            { House_heating__househeating.__split_fields =
                                (House_heating__househeating.__split_fields__content
                                    House_heating__update__this.this__split_fields) ;
                              House_heating__househeating.attr__tag =
                                House_heating__update__this.this__attr__tag }).
                          House_heating__househeating.rec__house_heating__househeating__status))
                      = (0 : int))));
               (([@branch_id=865] Main.spark__branch).bool__content)) then
             ([@GP_Sloc:house_heating.adb:15:20]
              [#"house_heating.adb" 15 0 0]
              (let temp___209 =
                 let temp___208 =
                   { House_heating__househeating.__split_fields =
                       (House_heating__househeating.__split_fields__content
                           House_heating__update__this.this__split_fields) ;
                     House_heating__househeating.attr__tag =
                       House_heating__update__this.this__attr__tag } in
                 ([#"house_heating.adb" 15 0 0]
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         (House_heating__househeating.__split_fields
                             temp___208).House_heating__househeating.rec__house_heating__househeating__temp in
                       () in
                     ()
                   end));
                 ({ temp___208 with
                    House_heating__househeating.__split_fields =
                      ({ (House_heating__househeating.__split_fields
                             temp___208) with
                         House_heating__househeating.rec__house_heating__househeating__temp =
                           (House_heating__temperature__rep.of_rep
                              ([#"house_heating.adb" 15 0 0]
                               [@vc:annotation]
                               [@GP_Shape:if__this_assign__add]
                               [@GP_Sloc:house_heating.adb:15:33]
                               [@GP_Reason:VC_RANGE_CHECK]
                               [@comment:         This.temp := This.temp + TempIncrease;                                 ^ house_heating.adb:15:33:VC_RANGE_CHECK]
                               [@GP_Id:0]
                               (House_heating__temperature.range_check_
                                  ((House_heating__temperature__rep.to_rep
                                      ((House_heating__househeating.__split_fields
                                           { House_heating__househeating.__split_fields =
                                               (House_heating__househeating.__split_fields__content
                                                   House_heating__update__this.this__split_fields) ;
                                             House_heating__househeating.attr__tag =
                                               House_heating__update__this.this__attr__tag }).
                                         House_heating__househeating.rec__house_heating__househeating__temp))
                                     + (1 : int))))) }) }) in
               House_heating__update__this.this__split_fields.House_heating__househeating.__split_fields__content <-
                 (House_heating__househeating.__split_fields temp___209)))
           else
             ([@GP_Sloc:house_heating.adb:16:7]
              (if (([#"house_heating.adb" 16 0 0]
                    [#"house_heating.adb" 16 0 0]
                    (([@branch_id=882] Main.spark__branch).bool__content <-
                       ((House_heating__heatingstatus__rep.to_rep
                           ((House_heating__househeating.__split_fields
                                { House_heating__househeating.__split_fields =
                                    (House_heating__househeating.__split_fields__content
                                        House_heating__update__this.this__split_fields) ;
                                  House_heating__househeating.attr__tag =
                                    House_heating__update__this.this__attr__tag }).
                              House_heating__househeating.rec__house_heating__househeating__status))
                          = (1 : int))));
                   (([@branch_id=882] Main.spark__branch).bool__content)) then
                 ([@GP_Sloc:house_heating.adb:17:20]
                  [#"house_heating.adb" 17 0 0]
                  (let temp___212 =
                     let temp___211 =
                       { House_heating__househeating.__split_fields =
                           (House_heating__househeating.__split_fields__content
                               House_heating__update__this.this__split_fields) ;
                         House_heating__househeating.attr__tag =
                           House_heating__update__this.this__attr__tag } in
                     ([#"house_heating.adb" 17 0 0]
                      (begin
                         ensures { true }
                         let _ =
                           let _ =
                             (House_heating__househeating.__split_fields
                                 temp___211).House_heating__househeating.rec__house_heating__househeating__temp in
                           () in
                         ()
                       end));
                     ({ temp___211 with
                        House_heating__househeating.__split_fields =
                          ({ (House_heating__househeating.__split_fields
                                 temp___211) with
                             House_heating__househeating.rec__house_heating__househeating__temp =
                               (House_heating__temperature__rep.of_rep
                                  ([#"house_heating.adb" 17 0 0]
                                   [@comment:         This.temp := This.temp - TempDecrease;                                 ^ house_heating.adb:17:33:VC_RANGE_CHECK]
                                   [@GP_Sloc:house_heating.adb:17:33]
                                   [@vc:annotation]
                                   [@GP_Reason:VC_RANGE_CHECK]
                                   [@GP_Shape:if__this_assign__sub]
                                   [@GP_Id:1]
                                   (House_heating__temperature.range_check_
                                      ((House_heating__temperature__rep.to_rep
                                          ((House_heating__househeating.__split_fields
                                               { House_heating__househeating.__split_fields =
                                                   (House_heating__househeating.__split_fields__content
                                                       House_heating__update__this.this__split_fields) ;
                                                 House_heating__househeating.attr__tag =
                                                   House_heating__update__this.this__attr__tag }).
                                             House_heating__househeating.rec__house_heating__househeating__temp))
                                         - (1 : int))))) }) }) in
                   House_heating__update__this.this__split_fields.House_heating__househeating.__split_fields__content <-
                     (House_heating__househeating.__split_fields temp___212)))
               else ()))));
         (raise Return__exc)
       with Return__exc -> ()
       end);
      (begin
         ensures { true }
         let _ =
           let _ =
             (Boolean.orb
                ((Boolean.orb
                    ((Boolean.orb
                        ((Boolean.andb
                            ((Boolean.andb
                                ((House_heating__heatingstatus__rep.to_rep
                                    ((House_heating__househeating.__split_fields
                                         { House_heating__househeating.__split_fields =
                                             (House_heating__househeating.__split_fields__content
                                                 House_heating__update__this.this__split_fields) ;
                                           House_heating__househeating.attr__tag =
                                             House_heating__update__this.this__attr__tag }).
                                       House_heating__househeating.rec__house_heating__househeating__status))
                                   = (0 : int)))
                               (temp___old_193 < (17 : int))))
                           ((House_heating__temperature__rep.to_rep
                               ((House_heating__househeating.__split_fields
                                    { House_heating__househeating.__split_fields =
                                        (House_heating__househeating.__split_fields__content
                                            House_heating__update__this.this__split_fields) ;
                                      House_heating__househeating.attr__tag =
                                        House_heating__update__this.this__attr__tag }).
                                  House_heating__househeating.rec__house_heating__househeating__temp))
                              = (temp___old_194 + (1 : int)))))
                       ((Boolean.andb
                           ((Boolean.andb
                               ((House_heating__heatingstatus__rep.to_rep
                                   ((House_heating__househeating.__split_fields
                                        { House_heating__househeating.__split_fields =
                                            (House_heating__househeating.__split_fields__content
                                                House_heating__update__this.this__split_fields) ;
                                          House_heating__househeating.attr__tag =
                                            House_heating__update__this.this__attr__tag }).
                                      House_heating__househeating.rec__house_heating__househeating__status))
                                  = (1 : int)))
                              (temp___old_195 > (19 : int))))
                          ((House_heating__temperature__rep.to_rep
                              ((House_heating__househeating.__split_fields
                                   { House_heating__househeating.__split_fields =
                                       (House_heating__househeating.__split_fields__content
                                           House_heating__update__this.this__split_fields) ;
                                     House_heating__househeating.attr__tag =
                                       House_heating__update__this.this__attr__tag }).
                                 House_heating__househeating.rec__house_heating__househeating__temp))
                             = (temp___old_196 - (1 : int))))))
                   ((Boolean.andb
                       ((House_heating__heatingstatus__rep.to_rep
                           ((House_heating__househeating.__split_fields
                                { House_heating__househeating.__split_fields =
                                    (House_heating__househeating.__split_fields__content
                                        House_heating__update__this.this__split_fields) ;
                                  House_heating__househeating.attr__tag =
                                    House_heating__update__this.this__attr__tag }).
                              House_heating__househeating.rec__house_heating__househeating__status))
                          = (1 : int)))
                      (temp___old_197 <= (19 : int)))))
               ((Boolean.andb
                   ((House_heating__heatingstatus__rep.to_rep
                       ((House_heating__househeating.__split_fields
                            { House_heating__househeating.__split_fields =
                                (House_heating__househeating.__split_fields__content
                                    House_heating__update__this.this__split_fields) ;
                              House_heating__househeating.attr__tag =
                                House_heating__update__this.this__attr__tag }).
                          House_heating__househeating.rec__house_heating__househeating__status))
                      = (0 : int)))
                  (temp___old_198 >= (17 : int))) in
           () in
         ()
       end)))
end

module House_heating__update__subprogram_lsp
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use House_heating__update__this as House_heating__update__this
  use House_heating__househeating as House_heating__househeating
  use House_heating__househeating___axiom as House_heating__househeating___axiom
  use House_heating__temperature as House_heating__temperature
  use House_heating__temperature__rep as House_heating__temperature__rep
  use House_heating__heatingstatus___axiom as House_heating__heatingstatus___axiom
  use House_heating__temperature___axiom as House_heating__temperature___axiom
  use House_heating__househeating___axiom as House_heating__househeating___axiom
  use House_heating__update__this___axiom as House_heating__update__this___axiom
  
  let def (__void_param : unit)
    requires { [#"house_heating.ads" 18 0 0] true }
    ensures { [#"house_heating.ads" 18 0 0] true }
  = [@vc:divergent]
    (([#"house_heating.ads" 18 0 0]
      assume {
        [#"house_heating.ads" 18 0 0]
        (((((House_heating__househeating___axiom.dynamic_invariant
               { House_heating__househeating.__split_fields =
                   (House_heating__househeating.__split_fields__content
                       House_heating__update__this.this__split_fields) ;
                 House_heating__househeating.attr__tag =
                   House_heating__update__this.this__attr__tag })
              True)
             False)
            True)
           True) });
     ([#"house_heating.ads" 18 0 0]
      (begin
         ensures { true }
         let _ =
           let _ =
             let temp___215 =
               House_heating__temperature__rep.to_rep
                 ((House_heating__househeating.__split_fields
                      { House_heating__househeating.__split_fields =
                          (House_heating__househeating.__split_fields__content
                              House_heating__update__this.this__split_fields) ;
                        House_heating__househeating.attr__tag =
                          House_heating__update__this.this__attr__tag }).
                    House_heating__househeating.rec__house_heating__househeating__temp) in
             (Boolean.andb ((17 : int) <= temp___215))
               (temp___215 <= (19 : int)) in
           () in
         ()
       end)))
end
