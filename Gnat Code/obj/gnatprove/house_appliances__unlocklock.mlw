module House_appliances__unlocked
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type unlocked
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = unlocked,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type unlocked__ref = { mutable unlocked__content : unlocked }
  
  function unlocked__ref_unlocked__content__projection (a: unlocked__ref) : unlocked =
    a.unlocked__content
  
  meta "model_projection" function unlocked__ref_unlocked__content__projection
  
  meta "inline:no" function unlocked__ref_unlocked__content__projection
  
  val unlocked__havoc (x: unlocked__ref) : unit
    writes { x }
end

module House_appliances__unlocked__rep
  use House_appliances__unlocked as House_appliances__unlocked
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = House_appliances__unlocked.unlocked,
    predicate in_range = House_appliances__unlocked.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module House_appliances__locked
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type locked
  
  val function first : int
    ensures { result = (0 : int) }
  
  val function last : int
    ensures { result = (1 : int) }
  
  predicate in_range (x: int) = ((first <= x) /\ (x <= last))
  
  val in_range (x: int) : bool
    ensures { result <-> (in_range (x : int)) }
  
  clone export ada__model.Static_Discrete with
    axiom .,
    type t = locked,
    function first = first,
    function last = last,
    predicate in_range = in_range
  
  type locked__ref = { mutable locked__content : locked }
  
  function locked__ref_locked__content__projection (a: locked__ref) : locked =
    a.locked__content
  
  meta "model_projection" function locked__ref_locked__content__projection
  
  meta "inline:no" function locked__ref_locked__content__projection
  
  val locked__havoc (x: locked__ref) : unit
    writes { x }
end

module House_appliances__locked__rep
  use House_appliances__locked as House_appliances__locked
  use _gnatprove_standard.Main
  use int.Int
  clone export ada__model.Rep_Proj_Int with
    axiom .,
    type t = House_appliances__locked.locked,
    predicate in_range = House_appliances__locked.in_range
  
  meta "model_projection" function to_rep
  
  meta "inline:no" function to_rep
end

module House_appliances__houseappliances__rep
  use _gnatprove_standard.Main
  use int.Int
  use _gnatprove_standard.Main as Main
  use House_appliances__unlocked as House_appliances__unlocked
  use House_appliances__unlocked__rep as House_appliances__unlocked__rep
  use House_appliances__locked as House_appliances__locked
  use House_appliances__locked__rep as House_appliances__locked__rep
  
  type __split_fields = {
                       rec__house_appliances__houseappliances__statusunlocked :
                         House_appliances__unlocked.unlocked;
                       rec__house_appliances__houseappliances__statuslocked :
                         House_appliances__locked.locked;
                       rec__ext__ : Main.__private
                       }
  
  function __split_fields_rec__house_appliances__houseappliances__statusunlocked__projection (a: __split_fields) : 
    House_appliances__unlocked.unlocked =
    a.rec__house_appliances__houseappliances__statusunlocked
  
  meta "model_projection" function __split_fields_rec__house_appliances__houseappliances__statusunlocked__projection
  
  meta "inline:no" function __split_fields_rec__house_appliances__houseappliances__statusunlocked__projection
  
  function __split_fields_rec__house_appliances__houseappliances__statuslocked__projection (a: __split_fields) : 
    House_appliances__locked.locked =
    a.rec__house_appliances__houseappliances__statuslocked
  
  meta "model_projection" function __split_fields_rec__house_appliances__houseappliances__statuslocked__projection
  
  meta "inline:no" function __split_fields_rec__house_appliances__houseappliances__statuslocked__projection
  
  function __split_fields_rec__ext____projection (a: __split_fields) : 
    Main.__private =
    a.rec__ext__
  
  meta "model_projection" function __split_fields_rec__ext____projection
  
  meta "inline:no" function __split_fields_rec__ext____projection
  
  type __split_fields__ref = {
                            mutable __split_fields__content : __split_fields
                            }
  
  function __split_fields__ref___split_fields__content__projection (a: __split_fields__ref) : __split_fields =
    __split_fields__content a
  
  meta "model_projection" function __split_fields__ref___split_fields__content__projection
  
  meta "inline:no" function __split_fields__ref___split_fields__content__projection
  
  val __split_fields__havoc (x: __split_fields__ref) : unit
    writes { x }
  
  type __rep = { __split_fields : __split_fields; attr__tag : int }
  
  function __rep___split_fields__projection (a: __rep) : __split_fields =
    __split_fields a
  
  meta "model_projection" function __rep___split_fields__projection
  
  meta "inline:no" function __rep___split_fields__projection
  
  function __rep_attr__tag__projection (a: __rep) : int = a.attr__tag
  
  meta "model_projection" function __rep_attr__tag__projection
  
  meta "inline:no" function __rep_attr__tag__projection
  
  function to_base (a: __rep) : __rep = a
  
  val to_base (a: __rep) : __rep
    ensures { result = (to_base (a : __rep)) }
  
  function of_base (a: __rep) : __rep = a
  
  val of_base (a: __rep) : __rep
    ensures { result = (of_base (a : __rep)) }
  
  predicate house_appliances__houseappliances__statusunlocked__pred (a: __rep) =
    true
  
  val house_appliances__houseappliances__statusunlocked__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (house_appliances__houseappliances__statusunlocked__pred
                   (a : __rep)) }
  
  val rec__house_appliances__houseappliances__statusunlocked_ (a: __rep) : 
    House_appliances__unlocked.unlocked
    requires { house_appliances__houseappliances__statusunlocked__pred a }
    ensures { (result
                 = ((__split_fields a).rec__house_appliances__houseappliances__statusunlocked)) }
  
  predicate house_appliances__houseappliances__statuslocked__pred (a: __rep) =
    true
  
  val house_appliances__houseappliances__statuslocked__pred (a: __rep) : 
    bool
    ensures { result
                <->
                (house_appliances__houseappliances__statuslocked__pred
                   (a : __rep)) }
  
  val rec__house_appliances__houseappliances__statuslocked_ (a: __rep) : 
    House_appliances__locked.locked
    requires { house_appliances__houseappliances__statuslocked__pred a }
    ensures { (result
                 = ((__split_fields a).rec__house_appliances__houseappliances__statuslocked)) }
  
  function bool_eq (a: __rep) (b: __rep) : bool =
    if (((House_appliances__unlocked__rep.to_rep
            ((__split_fields a).rec__house_appliances__houseappliances__statusunlocked))
           = (House_appliances__unlocked__rep.to_rep
                ((__split_fields b).rec__house_appliances__houseappliances__statusunlocked))) /\
          ((House_appliances__locked__rep.to_rep
              ((__split_fields a).rec__house_appliances__houseappliances__statuslocked))
             = (House_appliances__locked__rep.to_rep
                  ((__split_fields b).rec__house_appliances__houseappliances__statuslocked)))) then
      True
    else False
  
  val bool_eq (a: __rep) (b: __rep) : bool
    ensures { result = ((bool_eq (a : __rep)) (b : __rep)) }
  
  val function __dispatch_eq (a: __rep) (b: __rep) : bool
end

module House_appliances__houseappliances
  use export House_appliances__houseappliances__rep
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  
  type houseappliances = __rep
  
  val function __tag : int
  
  val function value__size : int
  
  val function object__size : int
  
  val function alignment : int
  
  axiom value__size_axiom: (value__size >= (0 : int))
  
  axiom object__size_axiom: (object__size >= (0 : int))
  
  axiom alignment_axiom: (alignment >= (0 : int))
  
  val function house_appliances__houseappliances__statusunlocked__first__bit : 
    int
  
  val function house_appliances__houseappliances__statusunlocked__last__bit : 
    int
  
  val function house_appliances__houseappliances__statusunlocked__position : 
    int
  
  axiom house_appliances__houseappliances__statusunlocked__first__bit_axiom:
    (house_appliances__houseappliances__statusunlocked__first__bit
       >= (0 : int))
  
  axiom house_appliances__houseappliances__statusunlocked__last__bit_axiom:
    (house_appliances__houseappliances__statusunlocked__last__bit
       > house_appliances__houseappliances__statusunlocked__first__bit)
  
  axiom house_appliances__houseappliances__statusunlocked__position_axiom:
    (house_appliances__houseappliances__statusunlocked__position
       >= (0 : int))
  
  val function house_appliances__houseappliances__statuslocked__first__bit : 
    int
  
  val function house_appliances__houseappliances__statuslocked__last__bit : 
    int
  
  val function house_appliances__houseappliances__statuslocked__position : 
    int
  
  axiom house_appliances__houseappliances__statuslocked__first__bit_axiom:
    (house_appliances__houseappliances__statuslocked__first__bit
       >= (0 : int))
  
  axiom house_appliances__houseappliances__statuslocked__last__bit_axiom:
    (house_appliances__houseappliances__statuslocked__last__bit
       > house_appliances__houseappliances__statuslocked__first__bit)
  
  axiom house_appliances__houseappliances__statuslocked__position_axiom:
    (house_appliances__houseappliances__statuslocked__position >= (0 : int))
  
  val function user_eq (a: houseappliances) (b: houseappliances) : bool
  
  val function dummy : houseappliances
  
  type houseappliances__ref = {
                             mutable houseappliances__content :
                               houseappliances
                             }
  
  function houseappliances__ref_houseappliances__content__projection (a: houseappliances__ref) : houseappliances =
    a.houseappliances__content
  
  meta "model_projection" function houseappliances__ref_houseappliances__content__projection
  
  meta "inline:no" function houseappliances__ref_houseappliances__content__projection
  
  val houseappliances__havoc (x: houseappliances__ref) : unit
    writes { x }
end

module House_appliances__unlocklock__this
  use _gnatprove_standard.Main
  use int.Int
  use House_appliances__houseappliances as House_appliances__houseappliances
  
  val this__split_fields : House_appliances__houseappliances.__split_fields__ref
  
  val function this__attr__tag : int
end

module House_appliances__houseappliances___axiom
  use _gnatprove_standard.Main
  use int.Int
  use House_appliances__houseappliances as House_appliances__houseappliances
  
  predicate dynamic_invariant (temp___expr_180: House_appliances__houseappliances.houseappliances) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) =
    true
  
  val dynamic_invariant (temp___expr_180: House_appliances__houseappliances.houseappliances) (temp___is_init_176: bool) (temp___skip_constant_177: bool) (temp___do_toplevel_178: bool) (temp___do_typ_inv_179: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant
                       (temp___expr_180 :
                          House_appliances__houseappliances.houseappliances))
                      (temp___is_init_176 : bool))
                     (temp___skip_constant_177 : bool))
                    (temp___do_toplevel_178 : bool))
                   (temp___do_typ_inv_179 : bool)) }
  
  predicate default_initial_assumption (temp___expr_181: House_appliances__houseappliances.houseappliances) (temp___skip_top_level_182: bool) =
    ((House_appliances__houseappliances.attr__tag temp___expr_181)
       = House_appliances__houseappliances.__tag)
  
  val default_initial_assumption (temp___expr_181: House_appliances__houseappliances.houseappliances) (temp___skip_top_level_182: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption
                    (temp___expr_181 :
                       House_appliances__houseappliances.houseappliances))
                   (temp___skip_top_level_182 : bool)) }
end

module House_appliances__unlocked___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use House_appliances__unlocked as House_appliances__unlocked
  
  predicate dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) =
    if ((temp___is_init_162 = True) \/
          (House_appliances__unlocked.first
             <= House_appliances__unlocked.last)) then
      (((House_appliances__unlocked.dynamic_property
           House_appliances__unlocked.first)
          House_appliances__unlocked.last)
         temp___expr_166)
    else true
  
  val dynamic_invariant (temp___expr_166: int) (temp___is_init_162: bool) (temp___skip_constant_163: bool) (temp___do_toplevel_164: bool) (temp___do_typ_inv_165: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_166 : int))
                      (temp___is_init_162 : bool))
                     (temp___skip_constant_163 : bool))
                    (temp___do_toplevel_164 : bool))
                   (temp___do_typ_inv_165 : bool)) }
  
  predicate default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) =
    true
  
  val default_initial_assumption (temp___expr_167: int) (temp___skip_top_level_168: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_167 : int))
                   (temp___skip_top_level_168 : bool)) }
end

module House_appliances__locked___axiom
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use House_appliances__locked as House_appliances__locked
  
  predicate dynamic_invariant (temp___expr_173: int) (temp___is_init_169: bool) (temp___skip_constant_170: bool) (temp___do_toplevel_171: bool) (temp___do_typ_inv_172: bool) =
    if ((temp___is_init_169 = True) \/
          (House_appliances__locked.first <= House_appliances__locked.last)) then
      (((House_appliances__locked.dynamic_property
           House_appliances__locked.first)
          House_appliances__locked.last)
         temp___expr_173)
    else true
  
  val dynamic_invariant (temp___expr_173: int) (temp___is_init_169: bool) (temp___skip_constant_170: bool) (temp___do_toplevel_171: bool) (temp___do_typ_inv_172: bool) : 
    bool
    ensures { result
                <->
                (((((dynamic_invariant (temp___expr_173 : int))
                      (temp___is_init_169 : bool))
                     (temp___skip_constant_170 : bool))
                    (temp___do_toplevel_171 : bool))
                   (temp___do_typ_inv_172 : bool)) }
  
  predicate default_initial_assumption (temp___expr_174: int) (temp___skip_top_level_175: bool) =
    true
  
  val default_initial_assumption (temp___expr_174: int) (temp___skip_top_level_175: bool) : 
    bool
    ensures { result
                <->
                ((default_initial_assumption (temp___expr_174 : int))
                   (temp___skip_top_level_175 : bool)) }
end

module House_appliances__unlocklock__this___axiom
  use _gnatprove_standard.Main
  use int.Int
end

module House_appliances__unlocklock__subprogram_def
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Main as Main
  use _gnatprove_standard.Boolean as Boolean
  use House_appliances__unlocklock__this as House_appliances__unlocklock__this
  use House_appliances__houseappliances as House_appliances__houseappliances
  use House_appliances__houseappliances___axiom as House_appliances__houseappliances___axiom
  use House_appliances__unlocked as House_appliances__unlocked
  use House_appliances__unlocked__rep as House_appliances__unlocked__rep
  use House_appliances__locked as House_appliances__locked
  use House_appliances__locked__rep as House_appliances__locked__rep
  use House_appliances__unlocked___axiom as House_appliances__unlocked___axiom
  use House_appliances__locked___axiom as House_appliances__locked___axiom
  use House_appliances__houseappliances___axiom as House_appliances__houseappliances___axiom
  use House_appliances__unlocklock__this___axiom as House_appliances__unlocklock__this___axiom
  
  let def (__void_param : unit)
    requires { [#"house_appliances.ads" 12 0 0] true }
    ensures { [#"house_appliances.ads" 12 0 0]
              [#"house_appliances.ads" 16 0 0]
              [@GP_Reason:VC_POSTCONDITION]
              [@comment:      ((This.statusUnlocked = Fridge and This.statusLocked = Oven) or       ^ house_appliances.ads:16:7:VC_POSTCONDITION]
              [@GP_Shape:pragargs__or]
              [@GP_Sloc:house_appliances.ads:16:7]
              [@model_vc_post]
              [@GP_Id:0]
              [@GP_Sloc:house_appliances.ads:16:7]
              [@GP_Pretty_Ada:3198]
              ((((House_appliances__unlocked__rep.to_rep
                    ((House_appliances__houseappliances.__split_fields
                         { House_appliances__houseappliances.__split_fields =
                             (House_appliances__houseappliances.__split_fields__content
                                 House_appliances__unlocklock__this.this__split_fields) ;
                           House_appliances__houseappliances.attr__tag =
                             House_appliances__unlocklock__this.this__attr__tag }).
                       House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                   = (0 : int)) /\
                  ((House_appliances__locked__rep.to_rep
                      ((House_appliances__houseappliances.__split_fields
                           { House_appliances__houseappliances.__split_fields =
                               (House_appliances__houseappliances.__split_fields__content
                                   House_appliances__unlocklock__this.this__split_fields) ;
                             House_appliances__houseappliances.attr__tag =
                               House_appliances__unlocklock__this.this__attr__tag }).
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked))
                     = (1 : int))) \/
                 (((House_appliances__unlocked__rep.to_rep
                      ((House_appliances__houseappliances.__split_fields
                           { House_appliances__houseappliances.__split_fields =
                               (House_appliances__houseappliances.__split_fields__content
                                   House_appliances__unlocklock__this.this__split_fields) ;
                             House_appliances__houseappliances.attr__tag =
                               House_appliances__unlocklock__this.this__attr__tag }).
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                     = (1 : int)) /\
                    ((House_appliances__locked__rep.to_rep
                        ((House_appliances__houseappliances.__split_fields
                             { House_appliances__houseappliances.__split_fields =
                                 (House_appliances__houseappliances.__split_fields__content
                                     House_appliances__unlocklock__this.this__split_fields) ;
                               House_appliances__houseappliances.attr__tag =
                                 House_appliances__unlocklock__this.this__attr__tag }).
                           House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked))
                       = (0 : int)))) }
  = [@vc:divergent]
    (([@GNAT-comment:Assume dynamic invariants of inputs of the subprogram house_appliances.ads:12]
      ());
     assume {
       ((((House_appliances__houseappliances___axiom.dynamic_invariant
             { House_appliances__houseappliances.__split_fields =
                 (House_appliances__houseappliances.__split_fields__content
                     House_appliances__unlocklock__this.this__split_fields) ;
               House_appliances__houseappliances.attr__tag =
                 House_appliances__unlocklock__this.this__attr__tag })
            True)
           False)
          True)
         True };
     ([@GNAT-comment:Assume moved pointers in outputs of the subprogram house_appliances.ads:12]
      ());
     ([@GNAT-comment:Check for RTE in the Pre of the subprogram house_appliances.ads:12]
      ());
     ([@GNAT-comment:Assume Pre of the subprogram house_appliances.ads:12] ());
     assume {
       [@GP_Pretty_Ada:3168]
       (((House_appliances__unlocked__rep.to_rep
            ((House_appliances__houseappliances.__split_fields
                 { House_appliances__houseappliances.__split_fields =
                     (House_appliances__houseappliances.__split_fields__content
                         House_appliances__unlocklock__this.this__split_fields) ;
                   House_appliances__houseappliances.attr__tag =
                     House_appliances__unlocklock__this.this__attr__tag }).
               House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
           = (0 : int)) \/
          ((House_appliances__unlocked__rep.to_rep
              ((House_appliances__houseappliances.__split_fields
                   { House_appliances__houseappliances.__split_fields =
                       (House_appliances__houseappliances.__split_fields__content
                           House_appliances__unlocklock__this.this__split_fields) ;
                     House_appliances__houseappliances.attr__tag =
                       House_appliances__unlocklock__this.this__attr__tag }).
                 House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
             = (1 : int))) };
     (try
        ([@GP_Sloc:house_appliances.adb:6:7]
         [#"house_appliances.adb" 6 0 0]
         (if (([#"house_appliances.adb" 6 0 0]
               [#"house_appliances.adb" 6 0 0]
               (([@branch_id=829] Main.spark__branch).bool__content <-
                  ((House_appliances__unlocked__rep.to_rep
                      ((House_appliances__houseappliances.__split_fields
                           { House_appliances__houseappliances.__split_fields =
                               (House_appliances__houseappliances.__split_fields__content
                                   House_appliances__unlocklock__this.this__split_fields) ;
                             House_appliances__houseappliances.attr__tag =
                               House_appliances__unlocklock__this.this__attr__tag }).
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                     = (0 : int))));
              (([@branch_id=829] Main.spark__branch).bool__content)) then
            (([@GP_Sloc:house_appliances.adb:8:30]
              [#"house_appliances.adb" 8 0 0]
              (let temp___195 =
                 let temp___194 =
                   { House_appliances__houseappliances.__split_fields =
                       (House_appliances__houseappliances.__split_fields__content
                           House_appliances__unlocklock__this.this__split_fields) ;
                     House_appliances__houseappliances.attr__tag =
                       House_appliances__unlocklock__this.this__attr__tag } in
                 ([#"house_appliances.adb" 8 0 0]
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         (House_appliances__houseappliances.__split_fields
                             temp___194).House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked in
                       () in
                     ()
                   end));
                 ({ temp___194 with
                    House_appliances__houseappliances.__split_fields =
                      ({ (House_appliances__houseappliances.__split_fields
                             temp___194) with
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked =
                           (House_appliances__unlocked__rep.of_rep (1 : int)) }) }) in
               [#"house_appliances.adb" 8 0 0]
               (House_appliances__unlocklock__this.this__split_fields.
                  House_appliances__houseappliances.__split_fields__content <-
                  (House_appliances__houseappliances.__split_fields
                      temp___195))));
             ([@GP_Sloc:house_appliances.adb:9:28]
              [#"house_appliances.adb" 9 0 0]
              (let temp___198 =
                 let temp___197 =
                   { House_appliances__houseappliances.__split_fields =
                       (House_appliances__houseappliances.__split_fields__content
                           House_appliances__unlocklock__this.this__split_fields) ;
                     House_appliances__houseappliances.attr__tag =
                       House_appliances__unlocklock__this.this__attr__tag } in
                 ([#"house_appliances.adb" 9 0 0]
                  (begin
                     ensures { true }
                     let _ =
                       let _ =
                         (House_appliances__houseappliances.__split_fields
                             temp___197).House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked in
                       () in
                     ()
                   end));
                 ({ temp___197 with
                    House_appliances__houseappliances.__split_fields =
                      ({ (House_appliances__houseappliances.__split_fields
                             temp___197) with
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked =
                           (House_appliances__locked__rep.of_rep (0 : int)) }) }) in
               [#"house_appliances.adb" 9 0 0]
               (House_appliances__unlocklock__this.this__split_fields.
                  House_appliances__houseappliances.__split_fields__content <-
                  (House_appliances__houseappliances.__split_fields
                      temp___198)))))
          else
            ([@GP_Sloc:house_appliances.adb:10:7]
             (if (([#"house_appliances.adb" 10 0 0]
                   [#"house_appliances.adb" 10 0 0]
                   (([@branch_id=847] Main.spark__branch).bool__content <-
                      ((House_appliances__unlocked__rep.to_rep
                          ((House_appliances__houseappliances.__split_fields
                               { House_appliances__houseappliances.__split_fields =
                                   (House_appliances__houseappliances.__split_fields__content
                                       House_appliances__unlocklock__this.this__split_fields) ;
                                 House_appliances__houseappliances.attr__tag =
                                   House_appliances__unlocklock__this.this__attr__tag }).
                             House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                         = (1 : int))));
                  (([@branch_id=847] Main.spark__branch).bool__content)) then
                (([@GP_Sloc:house_appliances.adb:12:30]
                  [#"house_appliances.adb" 12 0 0]
                  (let temp___204 =
                     let temp___203 =
                       { House_appliances__houseappliances.__split_fields =
                           (House_appliances__houseappliances.__split_fields__content
                               House_appliances__unlocklock__this.this__split_fields) ;
                         House_appliances__houseappliances.attr__tag =
                           House_appliances__unlocklock__this.this__attr__tag } in
                     ([#"house_appliances.adb" 12 0 0]
                      (begin
                         ensures { true }
                         let _ =
                           let _ =
                             (House_appliances__houseappliances.__split_fields
                                 temp___203).House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked in
                           () in
                         ()
                       end));
                     ({ temp___203 with
                        House_appliances__houseappliances.__split_fields =
                          ({ (House_appliances__houseappliances.__split_fields
                                 temp___203) with
                             House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked =
                               (House_appliances__unlocked__rep.of_rep
                                  (0 : int)) }) }) in
                   [#"house_appliances.adb" 12 0 0]
                   (House_appliances__unlocklock__this.this__split_fields.
                      House_appliances__houseappliances.__split_fields__content <-
                      (House_appliances__houseappliances.__split_fields
                          temp___204))));
                 ([@GP_Sloc:house_appliances.adb:13:28]
                  [#"house_appliances.adb" 13 0 0]
                  (let temp___207 =
                     let temp___206 =
                       { House_appliances__houseappliances.__split_fields =
                           (House_appliances__houseappliances.__split_fields__content
                               House_appliances__unlocklock__this.this__split_fields) ;
                         House_appliances__houseappliances.attr__tag =
                           House_appliances__unlocklock__this.this__attr__tag } in
                     ([#"house_appliances.adb" 13 0 0]
                      (begin
                         ensures { true }
                         let _ =
                           let _ =
                             (House_appliances__houseappliances.__split_fields
                                 temp___206).House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked in
                           () in
                         ()
                       end));
                     ({ temp___206 with
                        House_appliances__houseappliances.__split_fields =
                          ({ (House_appliances__houseappliances.__split_fields
                                 temp___206) with
                             House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked =
                               (House_appliances__locked__rep.of_rep
                                  (1 : int)) }) }) in
                   [#"house_appliances.adb" 13 0 0]
                   (House_appliances__unlocklock__this.this__split_fields.
                      House_appliances__houseappliances.__split_fields__content <-
                      (House_appliances__houseappliances.__split_fields
                          temp___207)))))
              else
                ([@GP_Sloc:house_appliances.adb:16:30]
                 [#"house_appliances.adb" 16 0 0]
                 (let temp___201 =
                    let temp___200 =
                      { House_appliances__houseappliances.__split_fields =
                          (House_appliances__houseappliances.__split_fields__content
                              House_appliances__unlocklock__this.this__split_fields) ;
                        House_appliances__houseappliances.attr__tag =
                          House_appliances__unlocklock__this.this__attr__tag } in
                    ([#"house_appliances.adb" 16 0 0]
                     (begin
                        ensures { true }
                        let _ =
                          let _ =
                            (House_appliances__houseappliances.__split_fields
                                temp___200).House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked in
                          () in
                        ()
                      end));
                    ({ temp___200 with
                       House_appliances__houseappliances.__split_fields =
                         ({ (House_appliances__houseappliances.__split_fields
                                temp___200) with
                            House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked =
                              (House_appliances__unlocked__rep.of_rep
                                 (1 : int)) }) }) in
                  [#"house_appliances.adb" 16 0 0]
                  (House_appliances__unlocklock__this.this__split_fields.
                     House_appliances__houseappliances.__split_fields__content <-
                     (House_appliances__houseappliances.__split_fields
                         temp___201))))))));
        (raise Return__exc)
      with Return__exc -> ()
      end);
     (begin
        ensures { true }
        let _ =
          let _ =
            (Boolean.orb
               ((Boolean.andb
                   ((House_appliances__unlocked__rep.to_rep
                       ((House_appliances__houseappliances.__split_fields
                            { House_appliances__houseappliances.__split_fields =
                                (House_appliances__houseappliances.__split_fields__content
                                    House_appliances__unlocklock__this.this__split_fields) ;
                              House_appliances__houseappliances.attr__tag =
                                House_appliances__unlocklock__this.this__attr__tag }).
                          House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                      = (0 : int)))
                  ((House_appliances__locked__rep.to_rep
                      ((House_appliances__houseappliances.__split_fields
                           { House_appliances__houseappliances.__split_fields =
                               (House_appliances__houseappliances.__split_fields__content
                                   House_appliances__unlocklock__this.this__split_fields) ;
                             House_appliances__houseappliances.attr__tag =
                               House_appliances__unlocklock__this.this__attr__tag }).
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked))
                     = (1 : int))))
              ((Boolean.andb
                  ((House_appliances__unlocked__rep.to_rep
                      ((House_appliances__houseappliances.__split_fields
                           { House_appliances__houseappliances.__split_fields =
                               (House_appliances__houseappliances.__split_fields__content
                                   House_appliances__unlocklock__this.this__split_fields) ;
                             House_appliances__houseappliances.attr__tag =
                               House_appliances__unlocklock__this.this__attr__tag }).
                         House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                     = (1 : int)))
                 ((House_appliances__locked__rep.to_rep
                     ((House_appliances__houseappliances.__split_fields
                          { House_appliances__houseappliances.__split_fields =
                              (House_appliances__houseappliances.__split_fields__content
                                  House_appliances__unlocklock__this.this__split_fields) ;
                            House_appliances__houseappliances.attr__tag =
                              House_appliances__unlocklock__this.this__attr__tag }).
                        House_appliances__houseappliances.rec__house_appliances__houseappliances__statuslocked))
                    = (0 : int))) in
          () in
        ()
      end))
end

module House_appliances__unlocklock__subprogram_lsp
  use _gnatprove_standard.Main
  use int.Int
  use int.Int
  use _gnatprove_standard.Boolean as Boolean
  use House_appliances__unlocklock__this as House_appliances__unlocklock__this
  use House_appliances__houseappliances as House_appliances__houseappliances
  use House_appliances__houseappliances___axiom as House_appliances__houseappliances___axiom
  use House_appliances__unlocked as House_appliances__unlocked
  use House_appliances__unlocked__rep as House_appliances__unlocked__rep
  use House_appliances__unlocked___axiom as House_appliances__unlocked___axiom
  use House_appliances__locked___axiom as House_appliances__locked___axiom
  use House_appliances__houseappliances___axiom as House_appliances__houseappliances___axiom
  use House_appliances__unlocklock__this___axiom as House_appliances__unlocklock__this___axiom
  
  let def (__void_param : unit)
    requires { [#"house_appliances.ads" 12 0 0] true }
    ensures { [#"house_appliances.ads" 12 0 0] true }
  = [@vc:divergent]
    (([#"house_appliances.ads" 12 0 0]
      assume {
        [#"house_appliances.ads" 12 0 0]
        (((((House_appliances__houseappliances___axiom.dynamic_invariant
               { House_appliances__houseappliances.__split_fields =
                   (House_appliances__houseappliances.__split_fields__content
                       House_appliances__unlocklock__this.this__split_fields) ;
                 House_appliances__houseappliances.attr__tag =
                   House_appliances__unlocklock__this.this__attr__tag })
              True)
             False)
            True)
           True) });
     ([#"house_appliances.ads" 12 0 0]
      (begin
         ensures { true }
         let _ =
           let _ =
             (Boolean.orb
                ((House_appliances__unlocked__rep.to_rep
                    ((House_appliances__houseappliances.__split_fields
                         { House_appliances__houseappliances.__split_fields =
                             (House_appliances__houseappliances.__split_fields__content
                                 House_appliances__unlocklock__this.this__split_fields) ;
                           House_appliances__houseappliances.attr__tag =
                             House_appliances__unlocklock__this.this__attr__tag }).
                       House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                   = (0 : int)))
               ((House_appliances__unlocked__rep.to_rep
                   ((House_appliances__houseappliances.__split_fields
                        { House_appliances__houseappliances.__split_fields =
                            (House_appliances__houseappliances.__split_fields__content
                                House_appliances__unlocklock__this.this__split_fields) ;
                          House_appliances__houseappliances.attr__tag =
                            House_appliances__unlocklock__this.this__attr__tag }).
                      House_appliances__houseappliances.rec__house_appliances__houseappliances__statusunlocked))
                  = (1 : int)) in
           () in
         ()
       end)))
end
