(* Module for axiomatizing type "exteriorstatus" defined at house_exterior.ads:4, created in Gnat2Why.Types.Translate_Type *)
module House_exterior__exteriorstatus
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type exteriorstatus  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 1
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = exteriorstatus,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type exteriorstatus__ref  = { mutable exteriorstatus__content : exteriorstatus }
  
  function   exteriorstatus__ref_exteriorstatus__content__projection
    (a : exteriorstatus__ref) requires {  } ensures  {  } returns
    exteriorstatus = a.exteriorstatus__content
  
  meta model_projection function exteriorstatus__ref_exteriorstatus__content__projection
  
  meta inline:no function exteriorstatus__ref_exteriorstatus__content__projection
  
  function   exteriorstatus__havoc (x : exteriorstatus__ref) requires {  }
    ensures  {  } returns unit

end

(* Module defining to_rep/of_rep for type "exteriorstatus" defined at house_exterior.ads:4, created in Gnat2Why.Types.Translate_Type *)
module House_exterior__exteriorstatus__rep
  
  use        House_exterior__exteriorstatus
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = House_exterior__exteriorstatus.exteriorstatus,
    predicate in_range = House_exterior__exteriorstatus.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "houseexterior" defined at house_exterior.ads:6, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module House_exterior__houseexterior__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        House_exterior__exteriorstatus
  use        House_exterior__exteriorstatus__rep
  
  type __split_fields  = { [model_trace:.889]
                           [name:status]rec__house_exterior__houseexterior__status : House_exterior__exteriorstatus.exteriorstatus;
                           rec__ext__ : _gnatprove_standard.Main.__private }
  
  function [model_trace:.889] [name:status] 
    __split_fields_rec__house_exterior__houseexterior__status__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    House_exterior__exteriorstatus.exteriorstatus = a.rec__house_exterior__houseexterior__status
  
  meta model_projection function __split_fields_rec__house_exterior__houseexterior__status__projection
  
  meta inline:no function __split_fields_rec__house_exterior__houseexterior__status__projection
  
  function   __split_fields_rec__ext____projection (a : __split_fields)
    requires {  } ensures  {  } returns
    _gnatprove_standard.Main.__private = a.rec__ext__
  
  meta model_projection function __split_fields_rec__ext____projection
  
  meta inline:no function __split_fields_rec__ext____projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields; attr__tag : int }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   __rep_attr__tag__projection (a : __rep) requires {  } ensures 
    {  } returns int = a.attr__tag
  
  meta model_projection function __rep_attr__tag__projection
  
  meta inline:no function __rep_attr__tag__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   house_exterior__houseexterior__status__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__house_exterior__houseexterior__status_ (a : __rep) requires
    { (house_exterior__houseexterior__status__pred a) } ensures 
    { (result = a.__split_fields.rec__house_exterior__houseexterior__status) }
    returns House_exterior__exteriorstatus.exteriorstatus
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           ((House_exterior__exteriorstatus__rep.to_rep
               a.__split_fields.rec__house_exterior__houseexterior__status)
              = (House_exterior__exteriorstatus__rep.to_rep
                   b.__split_fields.rec__house_exterior__houseexterior__status))
           then True  else False)
  
  function   __dispatch_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns bool

end

(* Module for axiomatizing type "houseexterior" defined at house_exterior.ads:6, created in Gnat2Why.Types.Translate_Type *)
module House_exterior__houseexterior
  
  use export House_exterior__houseexterior__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type houseexterior  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   __tag () requires {  } ensures  {  } returns int
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   house_exterior__houseexterior__status__first__bit () requires
    {  } ensures  {  } returns int
  
  function   house_exterior__houseexterior__status__last__bit () requires
    {  } ensures  {  } returns int
  
  function   house_exterior__houseexterior__status__position () requires {  }
    ensures  {  } returns int
  
  axiom house_exterior__houseexterior__status__first__bit_axiom : ((house_exterior__houseexterior__status__first__bit
                                                                    ) >= 0)
  
  axiom house_exterior__houseexterior__status__last__bit_axiom : ((house_exterior__houseexterior__status__last__bit
                                                                    )
                                                                    > (
                                                                    house_exterior__houseexterior__status__first__bit
                                                                    ))
  
  axiom house_exterior__houseexterior__status__position_axiom : ((house_exterior__houseexterior__status__position
                                                                    ) >= 0)
  
  function   user_eq (a : houseexterior b : houseexterior) requires { True }
    ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns houseexterior
  
  type houseexterior__ref  = { mutable houseexterior__content : houseexterior }
  
  function   houseexterior__ref_houseexterior__content__projection
    (a : houseexterior__ref) requires {  } ensures  {  } returns
    houseexterior = a.houseexterior__content
  
  meta model_projection function houseexterior__ref_houseexterior__content__projection
  
  meta inline:no function houseexterior__ref_houseexterior__content__projection
  
  function   houseexterior__havoc (x : houseexterior__ref) requires {  }
    ensures  {  } returns unit

end

(* Module giving axioms for type "houseexterior" defined at house_exterior.ads:6, created in Gnat2Why.Types.Generate_Type_Completion *)
module House_exterior__houseexterior___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        House_exterior__houseexterior
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_173) : House_exterior__houseexterior.houseexterior
    ([mlw:proxy_symbol] [introduced] temp___is_init_169) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_170) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_171) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_172) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_174) : House_exterior__houseexterior.houseexterior
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_175) : bool)
    requires { True } ensures  { True } returns
     = ((House_exterior__houseexterior.attr__tag ([mlw:proxy_symbol]
           [introduced] temp___expr_174))
          = House_exterior__houseexterior.__tag)

end

(* Module for defining a ref holding the value of variable "this" defined at house_exterior.ads:16, created in Gnat2Why.Decls.Translate_Variable *)
module House_exterior__updateunlocked__this
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        House_exterior__houseexterior
  
  val this__split_fields [model_projected] [model_trace:921]
  [name:This] [sloc:house_exterior.ads:16]: House_exterior__houseexterior.__split_fields
  
  function  [sloc:house_exterior.ads:16] this__attr__tag () requires {  }
    ensures  {  } returns int

end

(* Module giving axioms for type "exteriorstatus" defined at house_exterior.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module House_exterior__exteriorstatus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        House_exterior__exteriorstatus
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_166) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_162) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_163) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_164) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_165) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_162) = True) \/
          (House_exterior__exteriorstatus.first
             <= House_exterior__exteriorstatus.last))
       then
       (House_exterior__exteriorstatus.dynamic_property
          House_exterior__exteriorstatus.first
          House_exterior__exteriorstatus.last ([mlw:proxy_symbol]
          [introduced] temp___expr_166))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_167) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_168) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "this" defined at house_exterior.ads:16, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module House_exterior__updateunlocked__this___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "updateunlocked" defined at house_exterior.ads:16, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module House_exterior__updateunlocked__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        House_exterior__houseexterior
  use        House_exterior__houseexterior___axiom
  use        House_exterior__updateunlocked__this
  use        House_exterior__exteriorstatus
  use        House_exterior__exteriorstatus__rep
  use        House_exterior__exteriorstatus___axiom
  use        House_exterior__houseexterior___axiom
  use        House_exterior__updateunlocked__this___axiom
  
  function [GP_Subp:house_exterior.ads:16] [sloc:house_exterior.ads:16] def
    (__void_param : unit) requires { True } ensures 
    { ([sloc:house_exterior.ads:18] ([GP_Reason:VC_POSTCONDITION]
                                    [GP_Shape:pragargs__cmp]
                                    [GP_Sloc:house_exterior.ads:18:20]
                                    [model_vc_post]
                                    [comment:     Post'Class => This.status = Openable;                    ^ house_exterior.ads:18:20:VC_POSTCONDITION]
                                    [GP_Id:1] ([GP_Sloc:house_exterior.ads:18:20]
                                              [GP_Pretty_Ada:3165] ((House_exterior__exteriorstatus__rep.to_rep
                                                                    ( --pp_record_aggregate NOT IMPLEMENTED).House_exterior__houseexterior.__split_fields.House_exterior__houseexterior.rec__house_exterior__houseexterior__status)
                                                                    = 0)))) }
    returns
     = (* Assume dynamic invariants of inputs of the subprogram house_exterior.ads:16 *);
        assume
        { (House_exterior__houseexterior___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        (* Assume moved pointers in outputs of the subprogram house_exterior.ads:16 *);
        (* Check for RTE in the Pre of the subprogram house_exterior.ads:16 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram house_exterior.ads:16 *);
        assume
        { ([GP_Pretty_Ada:3153] ((House_exterior__exteriorstatus__rep.to_rep
                                    ( --pp_record_aggregate NOT IMPLEMENTED).House_exterior__houseexterior.__split_fields.House_exterior__houseexterior.rec__house_exterior__houseexterior__status)
                                   = 1)) };
        (try
        ();
          ([GP_Sloc:house_exterior.adb:12:19] ([sloc:house_exterior.adb:12] (let ([mlw:proxy_symbol]
                                              [introduced] temp___191) =
                                              (let ([mlw:proxy_symbol]
                                                [introduced] temp___190) =
                                                ( --pp_record_aggregate NOT IMPLEMENTED)
                                                in abstract ensures
                                                { True } begin  (let _ =
                                                               ([mlw:proxy_symbol]
                                                                 [introduced] temp___190).House_exterior__houseexterior.__split_fields.House_exterior__houseexterior.rec__house_exterior__houseexterior__status
                                                               in ())  end;
                                                --pp_record_update NOT IMPLEMENTED)
                                              in (
                                              House_exterior__updateunlocked__this.this__split_fields
                                              :=
                                              ([mlw:proxy_symbol]
                                                [introduced] temp___191).House_exterior__houseexterior.__split_fields))));
          raise Return__exc with | Return__exc  -> ());
        abstract ensures { True } begin  (let _ = True in ())  end

end

(* Module for checking LSP for subprogram "updateunlocked" defined at house_exterior.ads:16, created in Gnat2Why.Subprograms.Generate_VCs_For_LSP *)
module House_exterior__updateunlocked__subprogram_lsp
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        House_exterior__houseexterior
  use        House_exterior__houseexterior___axiom
  use        House_exterior__updateunlocked__this
  use        House_exterior__exteriorstatus
  use        House_exterior__exteriorstatus__rep
  use        House_exterior__exteriorstatus___axiom
  use        House_exterior__houseexterior___axiom
  use        House_exterior__updateunlocked__this___axiom
  
  function [GP_Subp:house_exterior.ads:16] [sloc:house_exterior.ads:16] def
    (__void_param : unit) requires { True } ensures  { True } returns
     = assume
        { (House_exterior__houseexterior___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        abstract ensures
        { True } begin  (let _ =
                       ((House_exterior__exteriorstatus__rep.to_rep
                           ( --pp_record_aggregate NOT IMPLEMENTED).House_exterior__houseexterior.__split_fields.House_exterior__houseexterior.rec__house_exterior__houseexterior__status)
                          = 1)
                       in ())  end;
        (* Checking absence of RTE in class-wide postcondition *);
        ( any --pp_effects NOT IMPLEMENTED pre {} post {} return unit);
    assume
    { (House_exterior__houseexterior___axiom.dynamic_invariant
         --pp_record_aggregate NOT IMPLEMENTED True True True True) };
    abstract ensures
    { True } begin  (let _ =
                   ((House_exterior__exteriorstatus__rep.to_rep
                       ( --pp_record_aggregate NOT IMPLEMENTED).House_exterior__houseexterior.__split_fields.House_exterior__houseexterior.rec__house_exterior__houseexterior__status)
                      = 0)
                   in ())  end

end
