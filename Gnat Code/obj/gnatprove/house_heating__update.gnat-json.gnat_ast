(* Module for axiomatizing type "heatingstatus" defined at house_heating.ads:4, created in Gnat2Why.Types.Translate_Type *)
module House_heating__heatingstatus
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type heatingstatus  
  
  function   first () requires { True } ensures  { True } returns int = 0
  
  function   last () requires { True } ensures  { True } returns int = 1
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = heatingstatus,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type heatingstatus__ref  = { mutable heatingstatus__content : heatingstatus }
  
  function   heatingstatus__ref_heatingstatus__content__projection
    (a : heatingstatus__ref) requires {  } ensures  {  } returns
    heatingstatus = a.heatingstatus__content
  
  meta model_projection function heatingstatus__ref_heatingstatus__content__projection
  
  meta inline:no function heatingstatus__ref_heatingstatus__content__projection
  
  function   heatingstatus__havoc (x : heatingstatus__ref) requires {  }
    ensures  {  } returns unit

end

(* Module defining to_rep/of_rep for type "heatingstatus" defined at house_heating.ads:4, created in Gnat2Why.Types.Translate_Type *)
module House_heating__heatingstatus__rep
  
  use        House_heating__heatingstatus
  use import _gnatprove_standard.Main
  use import int.Int
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = House_heating__heatingstatus.heatingstatus,
    predicate in_range = House_heating__heatingstatus.in_range
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing type "temperature" defined at house_heating.ads:5, created in Gnat2Why.Types.Translate_Type *)
module House_heating__temperature
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type temperature  = <range 17 19>
  
  function   first () requires { True } ensures  { True } returns int = 17
  
  function   last () requires { True } ensures  { True } returns int = 19
  
  function   in_range (x : int) requires { True } ensures  { True } returns
     = ((first <= x) /\ (x <= last))
  
  clone export ada__model.Static_Discrete with axiom . type t = temperature,
    function first = first, function last = last,
    predicate in_range = in_range
  
  type temperature__ref  = { mutable temperature__content : temperature }
  
  function   temperature__ref_temperature__content__projection
    (a : temperature__ref) requires {  } ensures  {  } returns
    temperature = a.temperature__content
  
  meta model_projection function temperature__ref_temperature__content__projection
  
  meta inline:no function temperature__ref_temperature__content__projection
  
  function   temperature__havoc (x : temperature__ref) requires {  } ensures 
    {  } returns unit

end

(* Module defining to_rep/of_rep for type "temperature" defined at house_heating.ads:5, created in Gnat2Why.Types.Translate_Type *)
module House_heating__temperature__rep
  
  use        House_heating__temperature
  use import _gnatprove_standard.Main
  use import int.Int
  
  function   to_rep (x : House_heating__temperature.temperature) requires
    { True } ensures  { True } returns
    int = (House_heating__temperature.temperature'int x)
  
  clone export ada__model.Rep_Proj_Int with axiom . type t = House_heating__temperature.temperature,
    predicate in_range = House_heating__temperature.in_range,
    function to_rep = to_rep
  
  meta model_projection function to_rep
  
  meta inline:no function to_rep

end

(* Module for axiomatizing the record theory associated to type "househeating" defined at house_heating.ads:13, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module House_heating__househeating__rep
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        _gnatprove_standard.Main
  use        House_heating__heatingstatus
  use        House_heating__heatingstatus__rep
  use        House_heating__temperature
  use        House_heating__temperature__rep
  
  type __split_fields  = { [model_trace:.960]
                           [name:temp]rec__house_heating__househeating__temp : House_heating__temperature.temperature;
                           [model_trace:.965]
                           [name:status]rec__house_heating__househeating__status : House_heating__heatingstatus.heatingstatus;
                           rec__ext__ : _gnatprove_standard.Main.__private }
  
  function [model_trace:.960] [name:temp] 
    __split_fields_rec__house_heating__househeating__temp__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    House_heating__temperature.temperature = a.rec__house_heating__househeating__temp
  
  meta model_projection function __split_fields_rec__house_heating__househeating__temp__projection
  
  meta inline:no function __split_fields_rec__house_heating__househeating__temp__projection
  
  function [model_trace:.965] [name:status] 
    __split_fields_rec__house_heating__househeating__status__projection
    (a : __split_fields) requires {  } ensures  {  } returns
    House_heating__heatingstatus.heatingstatus = a.rec__house_heating__househeating__status
  
  meta model_projection function __split_fields_rec__house_heating__househeating__status__projection
  
  meta inline:no function __split_fields_rec__house_heating__househeating__status__projection
  
  function   __split_fields_rec__ext____projection (a : __split_fields)
    requires {  } ensures  {  } returns
    _gnatprove_standard.Main.__private = a.rec__ext__
  
  meta model_projection function __split_fields_rec__ext____projection
  
  meta inline:no function __split_fields_rec__ext____projection
  
  type __split_fields__ref  = { mutable __split_fields__content : __split_fields }
  
  function   __split_fields__ref___split_fields__content__projection
    (a : __split_fields__ref) requires {  } ensures  {  } returns
    __split_fields = a.__split_fields__content
  
  meta model_projection function __split_fields__ref___split_fields__content__projection
  
  meta inline:no function __split_fields__ref___split_fields__content__projection
  
  function   __split_fields__havoc (x : __split_fields__ref) requires {  }
    ensures  {  } returns unit
  
  type __rep  = { __split_fields : __split_fields; attr__tag : int }
  
  function   __rep___split_fields__projection (a : __rep) requires {  }
    ensures  {  } returns __split_fields = a.__split_fields
  
  meta model_projection function __rep___split_fields__projection
  
  meta inline:no function __rep___split_fields__projection
  
  function   __rep_attr__tag__projection (a : __rep) requires {  } ensures 
    {  } returns int = a.attr__tag
  
  meta model_projection function __rep_attr__tag__projection
  
  meta inline:no function __rep_attr__tag__projection
  
  function   to_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   of_base (a : __rep) requires { True } ensures  { True } returns
    __rep = a
  
  function   house_heating__househeating__temp__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__house_heating__househeating__temp_ (a : __rep) requires
    { (house_heating__househeating__temp__pred a) } ensures 
    { (result = a.__split_fields.rec__house_heating__househeating__temp) }
    returns House_heating__temperature.temperature
  
  function   house_heating__househeating__status__pred (a : __rep) requires
    { True } ensures  { True } returns  = True
  
  function   rec__house_heating__househeating__status_ (a : __rep) requires
    { (house_heating__househeating__status__pred a) } ensures 
    { (result = a.__split_fields.rec__house_heating__househeating__status) }
    returns House_heating__heatingstatus.heatingstatus
  
  function   bool_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns
    bool = (if
           (((House_heating__temperature__rep.to_rep
                a.__split_fields.rec__house_heating__househeating__temp)
               = (House_heating__temperature__rep.to_rep
                    b.__split_fields.rec__house_heating__househeating__temp))
              /\
              ((House_heating__heatingstatus__rep.to_rep
                  a.__split_fields.rec__house_heating__househeating__status)
                 = (House_heating__heatingstatus__rep.to_rep
                      b.__split_fields.rec__house_heating__househeating__status)))
           then True  else False)
  
  function   __dispatch_eq (a : __rep b : __rep) requires { True } ensures 
    { True } returns bool

end

(* Module for axiomatizing type "househeating" defined at house_heating.ads:13, created in Gnat2Why.Types.Translate_Type *)
module House_heating__househeating
  
  use export House_heating__househeating__rep
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  
  type househeating  = --pp_transparent_type_definition NOT IMPLEMENTED
  
  function   __tag () requires {  } ensures  {  } returns int
  
  function   value__size () requires {  } ensures  {  } returns int
  
  function   object__size () requires {  } ensures  {  } returns int
  
  function   alignment () requires {  } ensures  {  } returns int
  
  axiom value__size_axiom : ((value__size ) >= 0)
  
  axiom object__size_axiom : ((object__size ) >= 0)
  
  axiom alignment_axiom : ((alignment ) >= 0)
  
  function   house_heating__househeating__temp__first__bit () requires {  }
    ensures  {  } returns int
  
  function   house_heating__househeating__temp__last__bit () requires {  }
    ensures  {  } returns int
  
  function   house_heating__househeating__temp__position () requires {  }
    ensures  {  } returns int
  
  axiom house_heating__househeating__temp__first__bit_axiom : ((house_heating__househeating__temp__first__bit
                                                                  ) >= 0)
  
  axiom house_heating__househeating__temp__last__bit_axiom : ((house_heating__househeating__temp__last__bit
                                                                 )
                                                                > (house_heating__househeating__temp__first__bit
                                                                    ))
  
  axiom house_heating__househeating__temp__position_axiom : ((house_heating__househeating__temp__position
                                                                ) >= 0)
  
  function   house_heating__househeating__status__first__bit () requires {  }
    ensures  {  } returns int
  
  function   house_heating__househeating__status__last__bit () requires {  }
    ensures  {  } returns int
  
  function   house_heating__househeating__status__position () requires {  }
    ensures  {  } returns int
  
  axiom house_heating__househeating__status__first__bit_axiom : ((house_heating__househeating__status__first__bit
                                                                    ) >= 0)
  
  axiom house_heating__househeating__status__last__bit_axiom : ((house_heating__househeating__status__last__bit
                                                                   )
                                                                  > (
                                                                  house_heating__househeating__status__first__bit
                                                                    ))
  
  axiom house_heating__househeating__status__position_axiom : ((house_heating__househeating__status__position
                                                                  ) >= 0)
  
  function   user_eq (a : househeating b : househeating) requires { True }
    ensures  { True } returns bool
  
  function   dummy () requires {  } ensures  {  } returns househeating
  
  type househeating__ref  = { mutable househeating__content : househeating }
  
  function   househeating__ref_househeating__content__projection
    (a : househeating__ref) requires {  } ensures  {  } returns
    househeating = a.househeating__content
  
  meta model_projection function househeating__ref_househeating__content__projection
  
  meta inline:no function househeating__ref_househeating__content__projection
  
  function   househeating__havoc (x : househeating__ref) requires {  }
    ensures  {  } returns unit

end

(* Module for defining a ref holding the value of variable "this" defined at house_heating.ads:18, created in Gnat2Why.Decls.Translate_Variable *)
module House_heating__update__this
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        House_heating__househeating
  
  val this__split_fields [model_trace:972] [model_projected]
  [name:This] [sloc:house_heating.ads:18]: House_heating__househeating.__split_fields
  
  function  [sloc:house_heating.ads:18] this__attr__tag () requires {  }
    ensures  {  } returns int

end

(* Module giving axioms for type "househeating" defined at house_heating.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module House_heating__househeating___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use        House_heating__househeating
  
  function   dynamic_invariant
    (([mlw:proxy_symbol]
    [introduced] temp___expr_180) : House_heating__househeating.househeating
    ([mlw:proxy_symbol] [introduced] temp___is_init_176) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_177) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_178) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_179) : bool) requires
    { True } ensures  { True } returns  = True
  
  function   default_initial_assumption
    (([mlw:proxy_symbol]
    [introduced] temp___expr_181) : House_heating__househeating.househeating
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_182) : bool)
    requires { True } ensures  { True } returns
     = ((House_heating__househeating.attr__tag ([mlw:proxy_symbol]
           [introduced] temp___expr_181)) = House_heating__househeating.__tag)

end

(* Module giving axioms for type "heatingstatus" defined at house_heating.ads:4, created in Gnat2Why.Types.Generate_Type_Completion *)
module House_heating__heatingstatus___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        House_heating__heatingstatus
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_166) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_162) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_163) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_164) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_165) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_162) = True) \/
          (House_heating__heatingstatus.first
             <= House_heating__heatingstatus.last))
       then
       (House_heating__heatingstatus.dynamic_property
          House_heating__heatingstatus.first
          House_heating__heatingstatus.last ([mlw:proxy_symbol]
          [introduced] temp___expr_166))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_167) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_168) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving axioms for type "temperature" defined at house_heating.ads:5, created in Gnat2Why.Types.Generate_Type_Completion *)
module House_heating__temperature___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        House_heating__temperature
  
  function   dynamic_invariant
    (([mlw:proxy_symbol] [introduced] temp___expr_173) : int
    ([mlw:proxy_symbol] [introduced] temp___is_init_169) : bool
    ([mlw:proxy_symbol] [introduced] temp___skip_constant_170) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_toplevel_171) : bool
    ([mlw:proxy_symbol] [introduced] temp___do_typ_inv_172) : bool) requires
    { True } ensures  { True } returns
     = (if
       ((([mlw:proxy_symbol] [introduced] temp___is_init_169) = True) \/
          (House_heating__temperature.first
             <= House_heating__temperature.last))
       then
       (House_heating__temperature.dynamic_property
          House_heating__temperature.first House_heating__temperature.last
          ([mlw:proxy_symbol] [introduced] temp___expr_173))
       )
  
  function   default_initial_assumption
    (([mlw:proxy_symbol] [introduced] temp___expr_174) : int
    ([mlw:proxy_symbol] [introduced] temp___skip_top_level_175) : bool)
    requires { True } ensures  { True } returns  = True

end

(* Module giving an empty axiom for the entity "this" defined at house_heating.ads:18, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module House_heating__update__this___axiom
  
  use import _gnatprove_standard.Main
  use import int.Int
  
  

end

(* Module for checking contracts and absence of run-time errors in subprogram "update" defined at house_heating.ads:18, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module House_heating__update__subprogram_def
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Main
  use        _gnatprove_standard.Boolean
  use        House_heating__update__this
  use        House_heating__househeating
  use        House_heating__househeating___axiom
  use        House_heating__heatingstatus
  use        House_heating__heatingstatus__rep
  use        House_heating__temperature
  use        House_heating__temperature__rep
  use        House_heating__heatingstatus___axiom
  use        House_heating__temperature___axiom
  use        House_heating__househeating___axiom
  use        House_heating__update__this___axiom
  
  function [GP_Subp:house_heating.ads:18] [sloc:house_heating.ads:18] def
    (__void_param : unit) requires { True } ensures 
    { ([sloc:house_heating.ads:20] ([GP_Reason:VC_POSTCONDITION]
                                   [GP_Shape:pragargs__or]
                                   [comment:   Post => (            ^ house_heating.ads:20:12:VC_POSTCONDITION]
                                   [model_vc_post]
                                   [GP_Sloc:house_heating.ads:20:12]
                                   [GP_Id:2] ([GP_Pretty_Ada:3335]
                                             [GP_Sloc:house_heating.ads:20:12] (
                                             ((((((House_heating__heatingstatus__rep.to_rep
                                                     ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                    = 0) /\
                                                   ((House_heating__temperature__rep.to_rep
                                                       --pp_tagged NOT IMPLEMENTED)
                                                      < 17)) /\
                                                  ((House_heating__temperature__rep.to_rep
                                                      ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                                     = ((House_heating__temperature__rep.to_rep
                                                           --pp_tagged NOT IMPLEMENTED)
                                                          + 1))) \/
                                                 ((((House_heating__heatingstatus__rep.to_rep
                                                       ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                      = 1) /\
                                                     ((House_heating__temperature__rep.to_rep
                                                         --pp_tagged NOT IMPLEMENTED)
                                                        > 19)) /\
                                                    ((House_heating__temperature__rep.to_rep
                                                        ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                                       = ((House_heating__temperature__rep.to_rep
                                                             --pp_tagged NOT IMPLEMENTED)
                                                            - 1)))) \/
                                                (((House_heating__heatingstatus__rep.to_rep
                                                     ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                    = 1) /\
                                                   ((House_heating__temperature__rep.to_rep
                                                       --pp_tagged NOT IMPLEMENTED)
                                                      <= 19))) \/
                                               (((House_heating__heatingstatus__rep.to_rep
                                                    ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                   = 0) /\
                                                  ((House_heating__temperature__rep.to_rep
                                                      --pp_tagged NOT IMPLEMENTED)
                                                     >= 17)))))) } returns
     = (* Assume dynamic invariants of inputs of the subprogram house_heating.ads:18 *);
        assume
        { (House_heating__househeating___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        (* Assume moved pointers in outputs of the subprogram house_heating.ads:18 *);
        (* Check for RTE in the Pre of the subprogram house_heating.ads:18 *);
        abstract ensures
        { True } begin  (let _ = True in ())  end;
        (* Assume Pre of the subprogram house_heating.ads:18 *);
        assume
        { ([GP_Pretty_Ada:3255] (let ([mlw:proxy_symbol]
          [introduced] temp___213) =
          (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
          in
          ((17 <= ([mlw:proxy_symbol] [introduced] temp___213)) /\
             (([mlw:proxy_symbol] [introduced] temp___213) <= 19)))) };
        (let ([mlw:proxy_symbol] [introduced] temp___old_198) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (let ([mlw:proxy_symbol] [introduced] temp___old_197) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (let ([mlw:proxy_symbol] [introduced] temp___old_196) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (let ([mlw:proxy_symbol] [introduced] temp___old_195) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (let ([mlw:proxy_symbol] [introduced] temp___old_194) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (let ([mlw:proxy_symbol] [introduced] temp___old_193) =
        ( (House_heating__temperature__rep.to_rep
             ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp))
        in (try
        ();
          ([GP_Sloc:house_heating.adb:7:7] ([sloc:house_heating.adb:7] 
                                           (if
                                           ([sloc:house_heating.adb:7] ([branch_id=829]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (_gnatprove_standard.Boolean.andb
                                              ((House_heating__heatingstatus__rep.to_rep
                                                  ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                 = 1)
                                              ((House_heating__temperature__rep.to_rep
                                                  ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                                 <= 17))));
                                           ([branch_id=829] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:house_heating.adb:8:22] 
                                           ([sloc:house_heating.adb:8] (let ([mlw:proxy_symbol]
                                           [introduced] temp___203) =
                                           (let ([mlw:proxy_symbol]
                                             [introduced] temp___202) =
                                             ( --pp_record_aggregate NOT IMPLEMENTED)
                                             in abstract ensures
                                             { True } begin  (let _ =
                                                            ([mlw:proxy_symbol]
                                                              [introduced] temp___202).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status
                                                            in ())  end;
                                             --pp_record_update NOT IMPLEMENTED)
                                           in (
                                           House_heating__update__this.this__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___203).House_heating__househeating.__split_fields))))
                                            else
                                           ([GP_Sloc:house_heating.adb:9:7] 
                                           (if
                                           ([sloc:house_heating.adb:9] ([branch_id=848]
                                           _gnatprove_standard.Main.spark__branch
                                           :=
                                           (_gnatprove_standard.Boolean.andb
                                              ((House_heating__heatingstatus__rep.to_rep
                                                  ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                                 = 0)
                                              ((House_heating__temperature__rep.to_rep
                                                  ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                                 >= 19))));
                                           ([branch_id=848] _gnatprove_standard.Main.spark__branch).bool__content
                                           then
                                           ();
                                           ([GP_Sloc:house_heating.adb:10:22] 
                                           ([sloc:house_heating.adb:10] (let ([mlw:proxy_symbol]
                                           [introduced] temp___206) =
                                           (let ([mlw:proxy_symbol]
                                             [introduced] temp___205) =
                                             ( --pp_record_aggregate NOT IMPLEMENTED)
                                             in abstract ensures
                                             { True } begin  (let _ =
                                                            ([mlw:proxy_symbol]
                                                              [introduced] temp___205).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status
                                                            in ())  end;
                                             --pp_record_update NOT IMPLEMENTED)
                                           in (
                                           House_heating__update__this.this__split_fields
                                           :=
                                           ([mlw:proxy_symbol]
                                             [introduced] temp___206).House_heating__househeating.__split_fields))))
                                            else ())))));
          ([GP_Sloc:house_heating.adb:14:7] ([sloc:house_heating.adb:14] 
                                            (if
                                            ([sloc:house_heating.adb:14] ([branch_id=865]
                                            _gnatprove_standard.Main.spark__branch
                                            :=
                                            ((House_heating__heatingstatus__rep.to_rep
                                                ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                               = 0)));
                                            ([branch_id=865] _gnatprove_standard.Main.spark__branch).bool__content
                                            then
                                            ();
                                            ([GP_Sloc:house_heating.adb:15:20] 
                                            ([sloc:house_heating.adb:15] (let ([mlw:proxy_symbol]
                                            [introduced] temp___209) =
                                            (let ([mlw:proxy_symbol]
                                              [introduced] temp___208) =
                                              ( --pp_record_aggregate NOT IMPLEMENTED)
                                              in abstract ensures
                                              { True } begin  (let _ =
                                                             ([mlw:proxy_symbol]
                                                               [introduced] temp___208).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp
                                                             in ())  end;
                                              --pp_record_update NOT IMPLEMENTED)
                                            in (
                                            House_heating__update__this.this__split_fields
                                            :=
                                            ([mlw:proxy_symbol]
                                              [introduced] temp___209).House_heating__househeating.__split_fields))))
                                             else
                                            ([GP_Sloc:house_heating.adb:16:7] 
                                            (if
                                            ([sloc:house_heating.adb:16] ([branch_id=882]
                                            _gnatprove_standard.Main.spark__branch
                                            :=
                                            ((House_heating__heatingstatus__rep.to_rep
                                                ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                               = 1)));
                                            ([branch_id=882] _gnatprove_standard.Main.spark__branch).bool__content
                                            then
                                            ();
                                            ([GP_Sloc:house_heating.adb:17:20] 
                                            ([sloc:house_heating.adb:17] (let ([mlw:proxy_symbol]
                                            [introduced] temp___212) =
                                            (let ([mlw:proxy_symbol]
                                              [introduced] temp___211) =
                                              ( --pp_record_aggregate NOT IMPLEMENTED)
                                              in abstract ensures
                                              { True } begin  (let _ =
                                                             ([mlw:proxy_symbol]
                                                               [introduced] temp___211).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp
                                                             in ())  end;
                                              --pp_record_update NOT IMPLEMENTED)
                                            in (
                                            House_heating__update__this.this__split_fields
                                            :=
                                            ([mlw:proxy_symbol]
                                              [introduced] temp___212).House_heating__househeating.__split_fields))))
                                             else ())))));
          raise Return__exc with | Return__exc  -> ());
        abstract ensures
        { True } begin  (let _ =
                       (_gnatprove_standard.Boolean.orb
                          (_gnatprove_standard.Boolean.orb
                             (_gnatprove_standard.Boolean.orb
                                (_gnatprove_standard.Boolean.andb
                                   (_gnatprove_standard.Boolean.andb
                                      ((House_heating__heatingstatus__rep.to_rep
                                          ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                         = 0)
                                      (([mlw:proxy_symbol]
                                         [introduced] temp___old_193) < 17))
                                   ((House_heating__temperature__rep.to_rep
                                       ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                      = (([mlw:proxy_symbol]
                                           [introduced] temp___old_194) + 1)))
                                (_gnatprove_standard.Boolean.andb
                                   (_gnatprove_standard.Boolean.andb
                                      ((House_heating__heatingstatus__rep.to_rep
                                          ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                         = 1)
                                      (([mlw:proxy_symbol]
                                         [introduced] temp___old_195) > 19))
                                   ((House_heating__temperature__rep.to_rep
                                       ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                                      = (([mlw:proxy_symbol]
                                           [introduced] temp___old_196) - 1))))
                             (_gnatprove_standard.Boolean.andb
                                ((House_heating__heatingstatus__rep.to_rep
                                    ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                   = 1)
                                (([mlw:proxy_symbol]
                                   [introduced] temp___old_197) <= 19)))
                          (_gnatprove_standard.Boolean.andb
                             ((House_heating__heatingstatus__rep.to_rep
                                 ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__status)
                                = 0)
                             (([mlw:proxy_symbol]
                                [introduced] temp___old_198) >= 17)))
                       in ())  end))))))

end

(* Module for checking LSP for subprogram "update" defined at house_heating.ads:18, created in Gnat2Why.Subprograms.Generate_VCs_For_LSP *)
module House_heating__update__subprogram_lsp
  
  use import _gnatprove_standard.Main
  use import int.Int
  use import int.Int
  use        _gnatprove_standard.Boolean
  use        House_heating__update__this
  use        House_heating__househeating
  use        House_heating__househeating___axiom
  use        House_heating__temperature
  use        House_heating__temperature__rep
  use        House_heating__heatingstatus___axiom
  use        House_heating__temperature___axiom
  use        House_heating__househeating___axiom
  use        House_heating__update__this___axiom
  
  function [GP_Subp:house_heating.ads:18] [sloc:house_heating.ads:18] def
    (__void_param : unit) requires { True } ensures  { True } returns
     = assume
        { (House_heating__househeating___axiom.dynamic_invariant
             --pp_record_aggregate NOT IMPLEMENTED True False True True) };
        abstract ensures
        { True } begin  (let _ =
                       (let ([mlw:proxy_symbol] [introduced] temp___215) =
                         (House_heating__temperature__rep.to_rep
                            ( --pp_record_aggregate NOT IMPLEMENTED).House_heating__househeating.__split_fields.House_heating__househeating.rec__house_heating__househeating__temp)
                         in
                         (_gnatprove_standard.Boolean.andb
                            (17 <= ([mlw:proxy_symbol]
                               [introduced] temp___215))
                            (([mlw:proxy_symbol] [introduced] temp___215)
                               <= 19)))
                       in ())  end

end
